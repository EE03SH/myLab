[files]
#log = 0-main-*.log
#radiolog = 0-radio-*.log
kernellog = *kernel*.log
log = *main*.log
radiolog = *radio*.log
ylog = *main*.ylog
radioylog = *radio*.ylog

#mtc*log, mtc log is not the same format
process = process*.log

[filterlevels]
[[high]]

juphoon = com.sprd.ImsConnectionManager
android = com.android.phone, com.android.dialer, com.android.messaging, ims_bridged
[[low]]
juphoon = com.sprd.ImsConnectionManager
android = com.android.phone, com.android.dialer
[tags]
#processname = tag1:num1 tag2:num2

com.android.messaging = MessagingAppDataModel:1  MessagingApp:1
#com.android.phone = TeleUtils:1 ImsCallSession:1
com.sprd.ImsConnectionManager = ImsConnectionManagerService:1 ImsConnectionManagerRelianceService:1
#com.android.dialer = InCall:1 EmergencyAndLowBattaryCallUtils:1 /system/priv-app/Dialer/lib/arm:1 is also a key word
com.android.dialer = InCall:1 EmergencyAndLowBattaryCallUtils:1
[words]

#still need pid??
com.spreadtrum.vowifi = [VoWifiService]
#/system/priv-app/Security/lib/arm , also can be a tag
com.sprd.vowifi.security = SecurityS2bBinder
com.android.phone = [Adapter]
[keywords]
#just like grep, more neat!
keywords = \[Adapter\], imsbr,JuIpsecServer, ip_monitor



[samsung]
log = samsung*log
[[keywords]]                        
recvrsp = "SipStackTransportCallback.*RespCode=\[(\d+)\].*Cseq\[(.*)\]"
recvreq = "SipStackTransportCallback:Method=\[(.*)\] Cseq\[(.*)\]"
sendreq = "SipStackBuildFinalReq:SIP Message to Peer method=.*iCSeq\[(\d+) (.*)\]"
sendrsp =  "SipStackTransportSendRsp:SIP RSP Message to Peer: iRespCode\[(\d+)\] iCSeq=\[(.*)\]"
ikemsg = "vpnclientd.*IKEv2 packet.*\((.*):(\d+) (.*) (.*):(\d+)\): mID=(\d+)(.*)"
#D/EPDG -- [EPDGService](  986): Active Rat Changed from 13(LTE) to 13(LTE)
statechange = "EPDG -- \[EPDGService\].*Active Rat Changed from.*\((.*)\) to .*\((.*)\)"
#EPDG -- [EPDGService](  986): Wifi is disconnected
#EPDG -- [EPDGService](  986): Wifi is Connected
wifichange = "EPDG -- \[EPDGService\].*(Wifi is.*onnected)"
#D/EPDG -- [EPDGService](  986): WifiCall is disabled
wfcchange = "EPDG -- \[EPDGService\].*(WifiCall is.*abled)"
#D EPDG -- [EPDGService]: getIsAirplaneMode: returning: true
airplanechange = "EPDG -- \[EPDGService\]: getIsAirplaneMode: returning: (.*)"



[[pattern]]
logtags = /EPDG, /IPSecService, /IPSECDATACONNSM, /RegistrationManager, /vpnclientd

[sprd]
lemontags = fsm\(.*\),\[TIMER.*\],process request,process response,gui notify,LEMON.*notifyCallbacks,IKE_KEY,\<SEND, \<RECV,\[SEND,\[RECV
#siptags is defined in Zos_DbufLogTxt
siptags = ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
datalentags = 'data length: '
receivertags = recv.*data
sendertags = UTPT.*send data
servicetags = TODO
adaptertags = TODO
sercuritytags = TODO

#FIXME: main log may miss log, UTPT.*send data can be lost when request is invite


#use this method, the length is not checked, if race condition, may confuse.
#newsendertags :trans TransPreProcEvnt event type <SEND NONINVITE>
newsendertags = "trans TransPreProcEvnt event type \<SEND"
#newrecvivertags: trans TransPreProcEvnt event type <RECV 1XX>
newrecvivertags = "trans TransPreProcEvnt event type \<RECV"

#old format
#SECURITY IKE: INFO: Decode: <IKE_AUTH>(MsgId:1) Msg Header
#SECURITY IKE: INFO: Encode: <IKE_SA_INIT>(MsgId:0) Msg Header
iketags = "SECURITY IKE: INFO: (\w+): <(\w+)>\(MsgId:(\d+)\) Msg Header"
#new format
#SECURITY IKE: INFO: Decode: Exchange Type: <IKE_SA_INIT>(Message ID: 0x00000000) Msg Header
#SECURITY IKE: INFO: Encode: Exchange Type: <IKE_SA_INIT>(Message ID: 0x00000000) Msg Header

#one of the old version, there is no "Msg Header"(mingzhe's test code), so remove it
ikenewtags = "SECURITY IKE: INFO: (\w+): Exchange Type: <(\w+)>\(Message ID: 0x(\d+)\)"

ikedecodestarttags = "##########################MsgDecode Begin##############################"
ikedecodeendtags = "##########################MsgDecode End##############################"
ikeencodestarttags = "##########################MsgEncode Begin##############################"
ikeencodeendtags = "##########################MsgEncode End##############################"
#Initiator SPI : 4c2684173a64c02e , Responder SPI: ab23a387a4202e66
ikespitags = "Initiator SPI : (.*) , Responder SPI: (.*)"

                     
#Attribute: INTERNAL_IP4_ADDRESS 10.196.224.199
ikev4tags  = "INTERNAL_IP4_ADDRESS (.*)"
#Attribute: INTERNAL_IP6_ADDRESS 2405:204:3809:928c::1905:58a4
ikev6tags  = "INTERNAL_IP6_ADDRESS (.*)"
#Attribute: INTERNAL_IP4_DNS 49.45.0.1
ikednsv4tags = "INTERNAL_IP4_DNS (.*)"
#Attribute: INTERNAL_IP6_DNS 2405:200:800::1
ikednsv6tags = "INTERNAL_IP6_DNS (.*)"
#Attribute: PCSCF_IP6_ADDRESS 2405:200:330:1581::15
#Attribute: PCSCF_IP6_ADDRESS 2405:200:330:1581::1b
ikepcscfv6tags = "PCSCF_IP6_ADDRESS (.*)"
#Attribute: PCSCF_IP4_ADDRESS 10.56.5.79
#Attribute: PCSCF_IP4_ADDRESS 10.56.5.82
ikepcscfv4tags = "PCSCF_IP4_ADDRESS (.*)"

#SECURITY IKE: INFO:   Type Payload: Delete


#ike log is not so good, add more action here
ikenextpayloadtags = "Next Payload: (.*)"
               
ikepayloadtags = "Type Payload: (.*)"               
ikedeletetags = "Type Payload: Delete"
ikenotifytags = "Notify Message Type:(.*)"


[sipParser]
reqline = "LEMON   : (\w+) (sip|tel):.* SIP/2.0"
rspline = "LEMON   : SIP/2.0 (\d+) (.*)"
#use non-greedy mode, ':' can be in anywhere!!
headerline = "LEMON   : (.*?):(.*)"
cseqline = "LEMON   : CSeq:(.*)"
#from, to's pattern
#there can be other format
#To: <sip:0938120779;phone-context=ims.mnc004.mcc520.3gppnetwork.org@ims.mnc004.mcc520.3gppnetwork.org;user=phone>
#From: "provision"<tel:0938120774;noa=national;srvattri=national;phone-context=+66>;tag=77upkw46
#To: <sip:+66938120779@ims.mnc004.mcc520.3gppnetwork.org>;tag=o01db3rb
#From: sip:123@ims.mnc001.mcc001.3gppnetwork.org;tag=1111111111
#RFC3261, name-addr/addr-spec           
numpattern = ".*(sip|tel):(.*)"
ippattern = "\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}"
pasopattern = 'P-Associated-URI:(.*)'
sdppattern = '(.)=(.*)'
directpattern = 'a=(sendonly|recvonly|sendrecv|inactive)'
rtpmappattern = 'a=rtpmap:(\d+) (.*)'
fmtppattern = 'a=fmtp:(\d+) (.*)'

#FIXME: current reinvite without sdp do not contain the b2buapattern...
b2buapattern = 'P-Com.Nokia.B2BUA-Involved'


causepattern = "Reason:Q.850;cause=(\d+)"

#m=<media> <port>/<number of ports> <proto> <fmt>
mediapattern = 'm=(.*?) (.*?) (.*?) (.*)'


[radioParser]
#CAUTION: +, ^ other chars , should convert             

#AT< ^CONN: 11,2,2
pdnpattern="AT< \^CONN: 11,2,(\d)"
#AT> AT+IMSHO=1
hopattern="AT> AT\+IMSHO=(\d)"

wifienpattern="AT> AT\+VOWIFIEN=(\d)"


#AT< +CIREGU: 6,0
#maybe not used
repregpattern="AT< \+CIREGU:(.*)"
#AT> AT+CIREG?
qryregpattern="AT> AT\+CIREG\?"
#AT< +CIREG:2,1,0
regstspattern="AT< \+CIREG:2,(\d),.*"
#AT> AT+IMSWFATT=1
attachpattern="AT> AT\+IMSWFATT=(\d)"
#AT> AT+VOWFREG=1
vowfregpattern="AT> AT\+VOWFREG=(\d)"
#i-wlan-node-id
#AT> AT+IMSHOWFINF=6,"IEEE-802.11;i-wlan-node-id=c412f56754bc"
wifiinfopattern="AT> AT\+IMSHOWFINF=.*,(.*)"
#utran-cell-id-3gpp
#AT< +IMSHOLTEINFU:5,"405872003c00000ec"
lteinfopattern="AT< \+IMSHOLTEINFU:.*,(.*)"
#AT> AT+IMSHOCALLEND=1
callendpattern="AT> AT\+IMSHOCALLEND=.*"

#AT> AT+IMSHODATAROUTER=1
updatedrpattern="AT> AT\+IMSHODATAROUTER=.*"

#AT< +WIFIPARAM:0,0,0,1
rtppattern="AT< \+WIFIPARAM:.*,.*,.*,(.*)"

#error pattern
errorpattern="\+CME ERROR:(.*)"

#VoLTE IMS enable
# AT> AT+IMSEN=1
volteimspattern="AT> AT\+IMSEN=1"

#VoLTE ims reg addr 
#AT< +IMSREGADDR:2405:204:1A07:B0BD::651:80AC
volteregaddrpattern="AT< \+IMSREGADDR:(.*)"

#ps dial
dialpattern="AT> ATD\(.*)"

#ps answer
answerpatter="AT> ATA.*"            
[logging]
logname = 'logparser'
loglevel = 'DEBUG'

[utils]
dirnames = diagrams/diag diagrams/pdf logs html misc
#one sip msg need 0.5 to render the diagram
estimate = 0.2
version = 1.0

#seems adobe only support up to about 70 msgs, we choose 60 here
splitgate = 20
[switch]
searchsip = disabled
searchike = disabled
